// <auto-generated />
using System;
using EntityLibrary.RepositoryContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityLibrary.Migrations.ConfigB
{
    [DbContext(typeof(AccessRepositoryDbContext))]
    partial class AccessRepositoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLibrary.RepositoryContext.CountryMaster", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryISOCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("internal_id");

                    b.ToTable("CountryMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.ElementTypeMaster", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElementType")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("internal_id");

                    b.ToTable("ElementTypeMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.Elements", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("country_id")
                        .HasColumnType("bigint");

                    b.Property<string>("element_field")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("element_field_label")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("element_field_type_id")
                        .HasColumnType("bigint");

                    b.Property<string>("element_field_value")
                        .HasColumnType("nvarchar(999)");

                    b.Property<string>("element_name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("element_validation")
                        .HasColumnType("nvarchar(999)");

                    b.Property<long?>("field_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("is_disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("is_required")
                        .HasColumnType("bit");

                    b.Property<long>("language_id")
                        .HasColumnType("bigint");

                    b.Property<long>("section_id")
                        .HasColumnType("bigint");

                    b.Property<string>("seo_tags")
                        .HasColumnType("nvarchar(999)");

                    b.Property<string>("server_object_type")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("internal_id");

                    b.HasIndex("country_id");

                    b.HasIndex("element_field_type_id");

                    b.HasIndex("field_id");

                    b.HasIndex("language_id");

                    b.HasIndex("section_id");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.FieldsRepository", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("field_name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("table_id")
                        .HasColumnType("bigint");

                    b.HasKey("internal_id");

                    b.HasIndex("table_id");

                    b.ToTable("FieldsRepository");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.LanguageMaster", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LangauageDesc")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LangauageISOCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("internal_id");

                    b.ToTable("LanguageMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.PageMaster", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("background_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("page_description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("page_name")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("internal_id");

                    b.ToTable("PageMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.SectionMaster", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("model_name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("page_id")
                        .HasColumnType("bigint");

                    b.Property<string>("section_description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("section_name")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("internal_id");

                    b.HasIndex("page_id");

                    b.ToTable("SectionMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.TablesRepository", b =>
                {
                    b.Property<long>("internal_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("database_name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("table_name")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("internal_id");

                    b.ToTable("TablesRepository");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.Elements", b =>
                {
                    b.HasOne("EntityLibrary.RepositoryContext.CountryMaster", "CountryMaster")
                        .WithMany("Elements")
                        .HasForeignKey("country_id");

                    b.HasOne("EntityLibrary.RepositoryContext.ElementTypeMaster", "ElementTypeMaster")
                        .WithMany()
                        .HasForeignKey("element_field_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLibrary.RepositoryContext.FieldsRepository", "FieldsRepository")
                        .WithMany("Elements")
                        .HasForeignKey("field_id");

                    b.HasOne("EntityLibrary.RepositoryContext.LanguageMaster", "LanguageMaster")
                        .WithMany("Elements")
                        .HasForeignKey("language_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLibrary.RepositoryContext.SectionMaster", "SectionMaster")
                        .WithMany("Elements")
                        .HasForeignKey("section_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryMaster");

                    b.Navigation("ElementTypeMaster");

                    b.Navigation("FieldsRepository");

                    b.Navigation("LanguageMaster");

                    b.Navigation("SectionMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.FieldsRepository", b =>
                {
                    b.HasOne("EntityLibrary.RepositoryContext.TablesRepository", "TablesRepository")
                        .WithMany("FieldsRepository")
                        .HasForeignKey("table_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TablesRepository");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.SectionMaster", b =>
                {
                    b.HasOne("EntityLibrary.RepositoryContext.PageMaster", "PageMaster")
                        .WithMany("SectionMaster")
                        .HasForeignKey("page_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.CountryMaster", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.FieldsRepository", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.LanguageMaster", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.PageMaster", b =>
                {
                    b.Navigation("SectionMaster");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.SectionMaster", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("EntityLibrary.RepositoryContext.TablesRepository", b =>
                {
                    b.Navigation("FieldsRepository");
                });
#pragma warning restore 612, 618
        }
    }
}
